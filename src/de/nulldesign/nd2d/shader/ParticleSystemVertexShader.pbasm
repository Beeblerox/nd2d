module_vertex_program defaultshader

    metadata
        namespace const(string, "AIF Test")
        vendor const(string, "Adobe")
        version const(int, 1)
    end_metadata
    
    transformations
        SCF INTOSSA OPT(DCE* {APR DCE*}*)
    end_transformations
    
    globals
        global parameter float-4 currentTime
        global parameter float-4 gravity
        global parameter float-4-4 objectToClipSpaceTransform
        input vertex float-4 endColor
            metadata
                id const(string, "PB3D_TARGET_NORMAL")
            end_metadata
        input vertex float-4 miscParams
            metadata
                id const(string, "PB3D_NORMAL")
            end_metadata
        input vertex float-4 startColor
            metadata
                id const(string, "PB3D_COLOR")
            end_metadata
        input vertex float-4 velocity
            metadata
                id const(string, "PB3D_TARGET_POSITION")
            end_metadata
        input vertex float-4 vertexPosition
            metadata
                id const(string, "PB3D_POSITION")
            end_metadata
        output vertex float-4 color
            metadata
                id const(string, "PB3D_COLOR")
            end_metadata
        output clipcoord float-4 vertexClipPosition
    end_globals
    
    functions
        external_function void evaluateVertex()
            body
                basic_block entry%A !! outlets(basic%A)
                    birth-0 = allocNonSSA type(float) : float
                    life-0 = allocNonSSA type(float) : float
                    startSize-0 = allocNonSSA type(float) : float
                    endSize-0 = allocNonSSA type(float) : float
                    progress-0 = allocNonSSA type(float) : float
                    p-0 = allocNonSSA type(float-4) : float-4
                    tmpVelocity-0 = allocNonSSA type(float-4) : float-4
                    size-0 = allocNonSSA type(float) : float
                    tmpVertexPos-0 = allocNonSSA type(float-4) : float-4
                    tmpColor-0 = allocNonSSA type(float-4) : float-4
                    jump block(basic%A) : void
                end_basic_block
                basic_block basic%A !! inlets(entry%A) outlets(exit%A)
                    _LD_birth-1 = extractVE miscParams, const(int, 0) : float
                    _LD_life-1 = extractVE miscParams, const(int, 1) : float
                    _LD_startSize-1 = extractVE miscParams, const(int, 2) : float
                    _LD_endSize-1 = extractVE miscParams, const(int, 3) : float
                    currentTimeElem%A-0 = extractVE currentTime, const(int, 0) : float
                    _subResult%A-0 = sub currentTimeElem%A-0, _LD_birth-1 : float
                    _divResult%A-0 = div _subResult%A-0, _LD_life-1 : float
                    _fractResult%A-0 = fract _divResult%A-0 : float
                    _LD_progress-1 = clamp _fractResult%A-0, const(float, 0), const(float, 1) : float
                    _LD_p-1 = makeFloatVector _LD_progress-1, _LD_progress-1, _LD_progress-1, const(float, 1) : float-4
                    _LD_tmpVelocity-1 = assign velocity : float-4
                    _mulResult%A-0 = mul gravity, _LD_p-1 : float-4
                    _LD_tmpVelocity-2 = add _LD_tmpVelocity-1, _mulResult%A-0 : float-4
                    _LD_tmpVelocity-3 = mul _LD_tmpVelocity-2, _LD_p-1 : float-4
                    _subResult%B-0 = sub const(float, 1), _LD_progress-1 : float
                    _mulResult%C-0 = mul _LD_startSize-1, _subResult%B-0 : float
                    _mulResult%D-0 = mul _LD_endSize-1, _LD_progress-1 : float
                    _LD_size-1 = add _mulResult%C-0, _mulResult%D-0 : float
                    _LD_tmpVertexPos-1 = assign vertexPosition : float-4
                    _LD_tmpVertexPosElem%A-0 = extractVE _LD_tmpVertexPos-1, const(int, 0) : float
                    _mulResult%E-0 = mul _LD_tmpVertexPosElem%A-0, _LD_size-1 : float
                    _LD_tmpVertexPos-2 = insertVE _mulResult%E-0, _LD_tmpVertexPos-1, const(int, 0) : float-4
                    _LD_tmpVertexPosElem%B-0 = extractVE _LD_tmpVertexPos-2, const(int, 1) : float
                    _mulResult%F-0 = mul _LD_tmpVertexPosElem%B-0, _LD_size-1 : float
                    _LD_tmpVertexPos-3 = insertVE _mulResult%F-0, _LD_tmpVertexPos-2, const(int, 1) : float-4
                    _LD_tmpVertexPosElem%C-0 = extractVE _LD_tmpVertexPos-3, const(int, 0) : float
                    _LD_tmpVelocityElem%A-0 = extractVE _LD_tmpVelocity-3, const(int, 0) : float
                    _addResult%C-0 = add _LD_tmpVertexPosElem%C-0, _LD_tmpVelocityElem%A-0 : float
                    _LD_tmpVertexPos-4 = insertVE _addResult%C-0, _LD_tmpVertexPos-3, const(int, 0) : float-4
                    _LD_tmpVertexPosElem%D-0 = extractVE _LD_tmpVertexPos-4, const(int, 1) : float
                    _LD_tmpVelocityElem%B-0 = extractVE _LD_tmpVelocity-3, const(int, 1) : float
                    _addResult%D-0 = add _LD_tmpVertexPosElem%D-0, _LD_tmpVelocityElem%B-0 : float
                    _LD_tmpVertexPos-5 = insertVE _addResult%D-0, _LD_tmpVertexPos-4, const(int, 1) : float-4
                    _LD_vertexClipPosition-1 = mul _LD_tmpVertexPos-5, objectToClipSpaceTransform : float-4
                    _LD_tmpColor-1 = assign const(float-4, (0, 0, 0, 0)) : float-4
                    startColorElem%A-0 = extractVE startColor, const(int, 0) : float
                    _subResult%C-0 = sub const(float, 1), _LD_progress-1 : float
                    _mulResult%H-0 = mul startColorElem%A-0, _subResult%C-0 : float
                    endColorElem%A-0 = extractVE endColor, const(int, 0) : float
                    _mulResult%I-0 = mul endColorElem%A-0, _LD_progress-1 : float
                    _addResult%E-0 = add _mulResult%H-0, _mulResult%I-0 : float
                    _LD_tmpColor-2 = insertVE _addResult%E-0, _LD_tmpColor-1, const(int, 0) : float-4
                    startColorElem%B-0 = extractVE startColor, const(int, 1) : float
                    _subResult%D-0 = sub const(float, 1), _LD_progress-1 : float
                    _mulResult%J-0 = mul startColorElem%B-0, _subResult%D-0 : float
                    endColorElem%B-0 = extractVE endColor, const(int, 1) : float
                    _mulResult%BA-0 = mul endColorElem%B-0, _LD_progress-1 : float
                    _addResult%F-0 = add _mulResult%J-0, _mulResult%BA-0 : float
                    _LD_tmpColor-3 = insertVE _addResult%F-0, _LD_tmpColor-2, const(int, 1) : float-4
                    startColorElem%C-0 = extractVE startColor, const(int, 2) : float
                    _subResult%E-0 = sub const(float, 1), _LD_progress-1 : float
                    _mulResult%BB-0 = mul startColorElem%C-0, _subResult%E-0 : float
                    endColorElem%C-0 = extractVE endColor, const(int, 2) : float
                    _mulResult%BC-0 = mul endColorElem%C-0, _LD_progress-1 : float
                    _addResult%G-0 = add _mulResult%BB-0, _mulResult%BC-0 : float
                    _LD_tmpColor-4 = insertVE _addResult%G-0, _LD_tmpColor-3, const(int, 2) : float-4
                    startColorElem%D-0 = extractVE startColor, const(int, 3) : float
                    _subResult%F-0 = sub const(float, 1), _LD_progress-1 : float
                    _mulResult%BD-0 = mul startColorElem%D-0, _subResult%F-0 : float
                    endColorElem%D-0 = extractVE endColor, const(int, 3) : float
                    _mulResult%BE-0 = mul endColorElem%D-0, _LD_progress-1 : float
                    _addResult%H-0 = add _mulResult%BD-0, _mulResult%BE-0 : float
                    _LD_color-1 = insertVE _addResult%H-0, _LD_tmpColor-4, const(int, 3) : float-4
                    jump block(exit%A) : void
                end_basic_block
                basic_block exit%A !! inlets(basic%A)
                    moveToNonSSA _LD_vertexClipPosition-1, vertexClipPosition : void
                    moveToNonSSA _LD_color-1, color : void
                    ret : void
                end_basic_block
            end_body
        end_external_function
    end_functions
    
end_module_vertex_program

